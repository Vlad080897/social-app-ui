/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SecuredRouteImport } from './routes/_secured/route'
import { Route as SecuredIndexImport } from './routes/_secured/index'
import { Route as SecuredSettingsImport } from './routes/_secured/settings'
import { Route as AuthAuthImport } from './routes/_auth/auth'
import { Route as SecuredProfileIdIndexImport } from './routes/_secured/profile/$id/index'
import { Route as SecuredProfileIdSettingsIndexImport } from './routes/_secured/profile/$id/settings/index'

// Create/Update Routes

const SecuredRouteRoute = SecuredRouteImport.update({
  id: '/_secured',
  getParentRoute: () => rootRoute,
} as any)

const SecuredIndexRoute = SecuredIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SecuredRouteRoute,
} as any)

const SecuredSettingsRoute = SecuredSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => SecuredRouteRoute,
} as any)

const AuthAuthRoute = AuthAuthImport.update({
  id: '/_auth/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const SecuredProfileIdIndexRoute = SecuredProfileIdIndexImport.update({
  id: '/profile/$id/',
  path: '/profile/$id/',
  getParentRoute: () => SecuredRouteRoute,
} as any)

const SecuredProfileIdSettingsIndexRoute =
  SecuredProfileIdSettingsIndexImport.update({
    id: '/profile/$id/settings/',
    path: '/profile/$id/settings/',
    getParentRoute: () => SecuredRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_secured': {
      id: '/_secured'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof SecuredRouteImport
      parentRoute: typeof rootRoute
    }
    '/_auth/auth': {
      id: '/_auth/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthAuthImport
      parentRoute: typeof rootRoute
    }
    '/_secured/settings': {
      id: '/_secured/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SecuredSettingsImport
      parentRoute: typeof SecuredRouteImport
    }
    '/_secured/': {
      id: '/_secured/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof SecuredIndexImport
      parentRoute: typeof SecuredRouteImport
    }
    '/_secured/profile/$id/': {
      id: '/_secured/profile/$id/'
      path: '/profile/$id'
      fullPath: '/profile/$id'
      preLoaderRoute: typeof SecuredProfileIdIndexImport
      parentRoute: typeof SecuredRouteImport
    }
    '/_secured/profile/$id/settings/': {
      id: '/_secured/profile/$id/settings/'
      path: '/profile/$id/settings'
      fullPath: '/profile/$id/settings'
      preLoaderRoute: typeof SecuredProfileIdSettingsIndexImport
      parentRoute: typeof SecuredRouteImport
    }
  }
}

// Create and export the route tree

interface SecuredRouteRouteChildren {
  SecuredSettingsRoute: typeof SecuredSettingsRoute
  SecuredIndexRoute: typeof SecuredIndexRoute
  SecuredProfileIdIndexRoute: typeof SecuredProfileIdIndexRoute
  SecuredProfileIdSettingsIndexRoute: typeof SecuredProfileIdSettingsIndexRoute
}

const SecuredRouteRouteChildren: SecuredRouteRouteChildren = {
  SecuredSettingsRoute: SecuredSettingsRoute,
  SecuredIndexRoute: SecuredIndexRoute,
  SecuredProfileIdIndexRoute: SecuredProfileIdIndexRoute,
  SecuredProfileIdSettingsIndexRoute: SecuredProfileIdSettingsIndexRoute,
}

const SecuredRouteRouteWithChildren = SecuredRouteRoute._addFileChildren(
  SecuredRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof SecuredRouteRouteWithChildren
  '/auth': typeof AuthAuthRoute
  '/settings': typeof SecuredSettingsRoute
  '/': typeof SecuredIndexRoute
  '/profile/$id': typeof SecuredProfileIdIndexRoute
  '/profile/$id/settings': typeof SecuredProfileIdSettingsIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthAuthRoute
  '/settings': typeof SecuredSettingsRoute
  '/': typeof SecuredIndexRoute
  '/profile/$id': typeof SecuredProfileIdIndexRoute
  '/profile/$id/settings': typeof SecuredProfileIdSettingsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_secured': typeof SecuredRouteRouteWithChildren
  '/_auth/auth': typeof AuthAuthRoute
  '/_secured/settings': typeof SecuredSettingsRoute
  '/_secured/': typeof SecuredIndexRoute
  '/_secured/profile/$id/': typeof SecuredProfileIdIndexRoute
  '/_secured/profile/$id/settings/': typeof SecuredProfileIdSettingsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/settings'
    | '/'
    | '/profile/$id'
    | '/profile/$id/settings'
  fileRoutesByTo: FileRoutesByTo
  to: '/auth' | '/settings' | '/' | '/profile/$id' | '/profile/$id/settings'
  id:
    | '__root__'
    | '/_secured'
    | '/_auth/auth'
    | '/_secured/settings'
    | '/_secured/'
    | '/_secured/profile/$id/'
    | '/_secured/profile/$id/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  SecuredRouteRoute: typeof SecuredRouteRouteWithChildren
  AuthAuthRoute: typeof AuthAuthRoute
}

const rootRouteChildren: RootRouteChildren = {
  SecuredRouteRoute: SecuredRouteRouteWithChildren,
  AuthAuthRoute: AuthAuthRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_secured",
        "/_auth/auth"
      ]
    },
    "/_secured": {
      "filePath": "_secured/route.tsx",
      "children": [
        "/_secured/settings",
        "/_secured/",
        "/_secured/profile/$id/",
        "/_secured/profile/$id/settings/"
      ]
    },
    "/_auth/auth": {
      "filePath": "_auth/auth.tsx"
    },
    "/_secured/settings": {
      "filePath": "_secured/settings.tsx",
      "parent": "/_secured"
    },
    "/_secured/": {
      "filePath": "_secured/index.tsx",
      "parent": "/_secured"
    },
    "/_secured/profile/$id/": {
      "filePath": "_secured/profile/$id/index.tsx",
      "parent": "/_secured"
    },
    "/_secured/profile/$id/settings/": {
      "filePath": "_secured/profile/$id/settings/index.tsx",
      "parent": "/_secured"
    }
  }
}
ROUTE_MANIFEST_END */
